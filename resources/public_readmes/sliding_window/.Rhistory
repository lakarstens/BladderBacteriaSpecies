knitr::opts_chunk$set(tidy = FALSE, warning = FALSE, message = FALSE, max.print = 5)
# load libraries
library(tidyverse)
library(skimr)
library(cluster)
library(tools)
# these can all be replaced by the new script output
window5=read.csv("../processed_data/workup/5_output.csv", header=FALSE, sep="\t")
window10=read.csv("../processed_data/workup/10_output.csv", header=FALSE, sep="\t")
window25=read.csv("../processed_data/workup/25_output.csv", header=FALSE, sep="\t")
window40=read.csv("../processed_data/workup/40_output.csv", header=FALSE, sep="\t")
window50=read.csv("../processed_data/workup/50_output.csv", header=FALSE, sep="\t")
window60=read.csv("../processed_data/workup/60_output.csv", header=FALSE, sep="\t")
window80=read.csv("../processed_data/workup/80_output.csv", header=FALSE, sep="\t")
window90=read.csv("../processed_data/workup/90_output.csv", header=FALSE, sep="\t")
window100=read.csv("../processed_data/workup/100_output.csv", header=FALSE, sep="\t")
window125=read.csv("../processed_data/workup/125_output.csv", header=FALSE, sep="\t")
window150=read.csv("../processed_data/workup/150_output.csv", header=FALSE, sep="\t")
window175=read.csv("../processed_data/workup/175_output.csv", header=FALSE, sep="\t")
window200=read.csv("../processed_data/workup/200_output.csv", header=FALSE, sep="\t")
full_length=read.csv("../processed_data/workup/full_output.csv", header=FALSE, sep="\t")
# the window=6 on cog48 and 16S
cog48w6=read.csv("../processed_data/04_11_11_COG0048_w6.csv", header=FALSE, sep="\t")
f16sw6=read.csv("../processed_data/04_11_11_tcoffee_msa_16s_w6.csv", header=FALSE, sep="\t")
cog48w12=read.csv("../processed_data/04_11_11_COG0048_w12.csv", header=FALSE, sep="\t")
f16sw12=read.csv("../processed_data/04_11_11_tcoffee_msa_16s_w12.csv", header=FALSE, sep="\t")
# the new script output
opter=read.csv("../processed_data/workup/04_04_16_12_optimal_coffee_msa_16s.csv", header=FALSE, sep="\t")
head(opter)
skim(window200$V2)
skim(window100$V2)
skim(window80$V2)
skim(window50$V2)
skim(window25$V2)
skim(window10$V2)
skim(window5$V2)
skim(full_length$V2)
median(full_length$V2)
mock <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
ggplot(data.frame(idx=seq_along(mock), values=mock), aes(x=idx, y=values)) +
geom_hline(yintercept=.14, color="palegreen3", size=1) +
geom_point() +
labs(title="mock dataset, mean=.14")
get_filenames <- list.files("../processed_data/mock_data")
grapher <- function(got_filename) {
one=read.csv(paste(c("../processed_data/mock_data", got_filename), collapse="/"), header=FALSE, sep="\t")
get_names <- file_path_sans_ext(got_filename)
shortname <- str_split(get_names, "_")
ggplot(one, aes(x=V1, y=V2)) +
geom_hline(yintercept=.14, color="palegreen3", size=1) +
geom_line(size=1) +
labs(title=paste(c("Window size",shortname[[1]][5]), collapse=' '),
x="position", y="entropy") +
ylim(0,1)
}
for (x in 1:length(get_filenames)) {
#for (x in 1:3) {
print(grapher(get_filenames[x]))
}
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(full_length, aes(x=V1, y=V2)) +
geom_rect(xmin=108, xmax=159, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=198, xmax=323, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=517, xmax=585, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=664, xmax=772, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=914, xmax=975, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1083, xmax=1152, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1226, xmax=1283, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1352, xmax=1407, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1548, xmax=1583, ymin=0, ymax=Inf, fill="skyblue") +
geom_hline(yintercept = 1.61, color='red') +
geom_point(size=1) +
ylim(0,1.7) +
labs(title="Shannon entropy of each column in 16S sequence", subtitle="blue is variable region coordinates from E. coli, red line is max Shannon entropy", x="sequence position", y="shannon entropy")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window50, aes(x=V1, y=V2)) +
geom_rect(xmin=108, xmax=159, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=198, xmax=323, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=517, xmax=585, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=664, xmax=772, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=914, xmax=975, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1083, xmax=1152, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1226, xmax=1283, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1352, xmax=1407, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1548, xmax=1583, ymin=0, ymax=Inf, fill="skyblue") +
geom_line(size=1) +
#geom_hline(yintercept = .43, color="palegreen3", size=1) +
#geom_hline(yintercept = .26, color="palegreen4", size=1) +
labs(title="Sliding window analysis of 16S sequence", subtitle="window size=50, blue are variable region coordinates from E. coli", x="sequence position", y="average shannon entropy of window")
medoids <- pam(full_length, 9, diss = FALSE, metric = 'euclidean')
medoids$medoids
medoids50 <- pam(window50, 9, diss = FALSE, metric = 'euclidean')
medoids50$medoids
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(full_length, aes(x=V1, y=V2)) +
geom_vline(xintercept = 95, color="red", size=1) +
geom_vline(xintercept = 283, color="red", size=1) +
geom_vline(xintercept = 470, color="red", size=1) +
geom_vline(xintercept = 657, color="red", size=1) +
geom_vline(xintercept = 845, color="red", size=1) +
geom_vline(xintercept = 1034, color="red", size=1) +
geom_vline(xintercept = 1225, color="red", size=1) +
geom_vline(xintercept = 1416, color="red", size=1) +
geom_vline(xintercept = 1607, color="red", size=1) +
geom_point(size=1) +
labs(title="Shannon entropy of each column in 16S sequence", subtitle="red is k-medoids (k=9)", x="sequence position", y="shannon entropy")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window50, aes(x=V1, y=V2)) +
geom_vline(xintercept = 92, color="red", size=1) +
geom_vline(xintercept = 276, color="red", size=1) +
geom_vline(xintercept = 459, color="red", size=1) +
geom_vline(xintercept = 644, color="red", size=1) +
geom_vline(xintercept = 827, color="red", size=1) +
geom_vline(xintercept = 1011, color="red", size=1) +
geom_vline(xintercept = 1195, color="red", size=1) +
geom_vline(xintercept = 1378, color="red", size=1) +
geom_vline(xintercept = 1561, color="red", size=1) +
geom_line(size=1) +
#geom_hline(yintercept = .43, color="palegreen3", size=1) +
#geom_hline(yintercept = .26, color="palegreen4", size=1) +
labs(title="Sliding window analysis of 16S sequence", subtitle="window size=50, red is k-medoids (k=9)", x="sequence position", y="average shannon entropy of window")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window10, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 10", subtitle="16S MSA")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window40, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 40", subtitle="16S MSA")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window60, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 60", subtitle="16S MSA")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window80, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 80")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window125, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 125", subtitle="16S MSA")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(window200, aes(x=V1, y=V2)) +
geom_hline(yintercept = .43, color="palegreen3", size=1) +
geom_hline(yintercept = .26, color="palegreen4", size=1) +
geom_line(size=1) +
labs(title="window size 200", subtitle="16S MSA")
above_mean <- function(w) {
am <- w$V2>.42
higher <- w$V2[am]
return(length(higher))
}
some_values <- c(above_mean(window5),
above_mean(window10),
above_mean(window25),
above_mean(window40),
above_mean(window50),
above_mean(window60),
above_mean(window80),
above_mean(window90),
above_mean(window100),
above_mean(window125),
above_mean(window150),
above_mean(window175),
above_mean(window200))
# from the new python function
head(opter)
ggplot(data.frame(some_values, idx=c(5,10,25,40,50,60,80,90,100,125,150,175,200), values=some_values), aes(x=idx, y=values)) +
geom_vline(xintercept = 50, color="steelblue") +
geom_hline(yintercept = 720, color="steelblue") +
geom_point(size=2) +
labs(title="number of values above mean from increasing window size", subtitle = "mean calculated from per-column entropy scores", x="size of window in bp", y="number of values above mean")
resid <- data.frame(idx=seq_along(window50$V2), values=(ifelse(window50$V2>.49, abs(window50$V2-.49), 0)))
#resid <- data.frame(idx=seq_along(window50$V2), values=(abs(window50$V2-.49)))
ggplot(resid, aes(x=idx, y=values)) +
geom_line(size=1) +
labs(title="Only values above the average")
ggplot(opter, aes(x=V1, y=V2)) +
geom_vline(xintercept = 50, color="steelblue") +
geom_hline(yintercept = 708, color="steelblue") +
geom_point(size=2) +
labs(title="window mean > average from python script", subtitle = "mean calculated from per-column entropy scores", x="size of window in bp", y="number of values above mean")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(cog48w6, aes(x=V1, y=V2)) +
geom_hline(yintercept = .463, color='red') +
geom_hline(yintercept = .231, color='red') +
geom_hline(yintercept = .116, color='red') +
geom_line(size=1) +
labs(title="cog48, window size 6")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(cog48w12, aes(x=V1, y=V2)) +
geom_hline(yintercept = .463, color='red') +
geom_hline(yintercept = .231, color='red') +
geom_hline(yintercept = .116, color='red') +
geom_line(size=1) +
labs(title="cog48, window size 12")
#entropy=data.frame(idx=seq_along(ent_vals), values=ent_vals)
ggplot(f16sw6, aes(x=V1, y=V2)) +
geom_rect(xmin=108, xmax=159, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=198, xmax=323, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=517, xmax=585, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=664, xmax=772, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=914, xmax=975, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1083, xmax=1152, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1226, xmax=1283, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1352, xmax=1407, ymin=0, ymax=Inf, fill="skyblue") +
geom_rect(xmin=1548, xmax=1583, ymin=0, ymax=Inf, fill="skyblue") +
geom_hline(yintercept = .463, color='red') +
geom_hline(yintercept = .231, color='red') +
geom_hline(yintercept = .116, color='red') +
geom_line(size=1) +
labs(title="16S, window size 6")
