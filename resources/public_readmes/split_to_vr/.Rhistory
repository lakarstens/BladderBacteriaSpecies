for (r in regions) {
by_region <- the_df %>% filter(classifier==c & database==d & region==r)
conf_by_region <- by_region[by_region$confidence==.01,]
df_all_conf <- rbind(df_all_conf, conf_by_region)
}
}
}
df_all_conf$region <- factor(df_all_conf$region, levels = c("V1-V3", "V2-V3", "V3-V4", "V3-V5", "V4", "V4-V6"))
return(df_all_conf)
}
all_conf_complete <- function(the_df) {
df_all_conf <- data.frame()
regions <-c("V1-V3", "V2-V3", "V3-V4", "V3-V5", "V4", "V4-V6", "V3", "V6")
classfrs <- c("BLCA", "Naive Bayes")
dbses <- c("Silva", "NCBI 16S", "Greengenes")
for (c in classfrs) {
for (d in dbses) {
for (r in regions) {
by_region <- the_df %>% filter(classifier==c & database==d & region==r)
conf_by_region <- by_region[by_region$confidence==.01,]
df_all_conf <- rbind(df_all_conf, conf_by_region)
}
}
}
df_all_conf$region <- factor(df_all_conf$region, levels = c("V1-V3", "V2-V3", "V3", "V3-V4", "V3-V5", "V4", "V4-V6", "V6"))
return(df_all_conf)
}
lactobacillus_all_conf <- collect_all_confidence(lactobacillus_results)
#lactobacillus_all_conf$region <- factor(lactobacillus_all_conf$region, levels = c("V1-V3", "V2-V3", "V3-V4", "V3-V5", "V4", "V4-V6"))
ggplot(lactobacillus_results %>% filter(region %notin% c("V3", "V6")), aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,10,2), limits = c(0,10)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14)) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Lactobacillus genus only", y="number of True Matches", x="confidence value")
ggplot(lactobacillus_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/9, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom"  ) +
labs(title="Performance when ignoring confidence, Lactobacillus genus only", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 9", x="Recall", y="F value")
lactobacillus_complete <- all_conf_complete(lactobacillus_results)
ggplot(lactobacillus_complete, aes(x=region, y=true_match)) +
geom_col(position="dodge", fill=wes_palette("Moonrise2")[2]) +
#scale_fill_manual(values = c(wes_palette("IsleofDogs1")[2], wes_palette("IsleofDogs1")[1],wes_palette("IsleofDogs1")[3])) +
scale_fill_brewer(palette = "Paired")+
scale_y_continuous(breaks=seq(0,10,1), limits = c(0,10)) +
#theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5), axis.text = element_text(size=12)) +
facet_grid(classifier~database)+
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(title="Number of correctly identified Lactobacillus species\nfound in the bladder", subtitle="All classification schemes\nnumber of Lactobacillus species in dataset = 9", x="Variable region", y="True Matches", fill="Variable region")
lacto_ignore <- all_conf_complete(lactobacillus_results)
ggplot(lacto_ignore, aes(x=region, y=true_match, fill=classifier)) +
geom_col(position="dodge") +
scale_fill_manual(values = c(wes_palette("IsleofDogs1")[2], wes_palette("IsleofDogs1")[1],wes_palette("IsleofDogs1")[3])) +
#scale_fill_brewer(palette = "Paired")+
scale_y_continuous(breaks=seq(0,10,1), limits = c(0,10)) +
#theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5), axis.text = element_text(size=12)) +
facet_wrap(~database)+
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(title="Number of correctly identified Lactobacillus species\nfound in the bladder", subtitle="All classification schemes, ignoring confidence score\nnumber of Lactobacillus species in dataset = 9", x="Variable region", y="Correctly identified", fill="Classifier")
corynebacterium_all_conf <- collect_all_confidence(corynebacterium_results)
ggplot(corynebacterium_results, aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,10,2), limits = c(0,10)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14) ) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Corynebacterium genus only", y="number of True Matches", x="confidence value")
ggplot(corynebacterium_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/7, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#geom_label_repel(aes(x=true_match/9, y=fmeasure, label=region), nudge_x= -.3, direction= "y") +
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom" ) +
labs(title="Performance when ignoring confidence, Corynebacterium genus only", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 7", x="Recall", y="F value")
corynebacterium_ignore <- all_conf_complete(corynebacterium_results)
ggplot(corynebacterium_ignore, aes(x=region, y=true_match, fill=classifier)) +
geom_col(position="dodge") +
scale_fill_manual(values = c(wes_palette("IsleofDogs1")[2], wes_palette("IsleofDogs1")[1],wes_palette("IsleofDogs1")[3])) +
#scale_fill_brewer(palette = "Paired")+
scale_y_continuous(breaks=seq(0,10,1), limits = c(0,10)) +
#theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5), axis.text = element_text(size=12)) +
facet_wrap(~database)+
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(title="Number of correctly identified Corynebacterium species\nfound in the bladder", subtitle="All classification schemes, ignoring confidence score\nnumber of Corynebacterium species in dataset = 7", x="Variable region", y="Correctly identified", fill="Classifier")
staphylococcus_all_conf <- collect_all_confidence(staphylococcus_results)
ggplot(staphylococcus_results, aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,10,2), limits = c(0,10)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14) ) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Staphylococcus genus only", y="number of True Matches", x="confidence value")
staph_ignore <- all_conf_complete(staphylococcus_results)
ggplot(staph_ignore, aes(x=region, y=true_match, fill=classifier)) +
geom_col(position="dodge") +
scale_fill_manual(values = c(wes_palette("IsleofDogs1")[2], wes_palette("IsleofDogs1")[1],wes_palette("IsleofDogs1")[3])) +
#scale_fill_brewer(palette = "Paired")+
scale_y_continuous(breaks=seq(0,10,1), limits = c(0,10)) +
#theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5), axis.text = element_text(size=12)) +
facet_wrap(~database)+
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(title="Number of correctly identified Staphylococcus species\nfound in the bladder", subtitle="All classification schemes, ignoring confidence score\nnumber of Staphylococcus species in dataset = 6", x="Variable region", y="Correctly identified", fill="Classifier")
ggplot(staphylococcus_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/6, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#geom_label_repel(aes(x=true_match/9, y=fmeasure, label=region), nudge_x= -.3, direction= "y") +
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom" ) +
labs(title="Performance when ignoring confidence, Staphylococcus genus only", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 6", x="Recall", y="F value")
actinomyces_all_conf <- collect_all_confidence(actinomyces_results)
ggplot(actinomyces_results, aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,10,2), limits = c(0,10)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14) ) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Actinomyces genus only", y="number of True Matches", x="confidence value")
ggplot(actinomyces_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/5, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#geom_label_repel(aes(x=true_match/5, y=fmeasure, label=region), nudge_x= -.3, direction= "y") +
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom" ) +
labs(title="Performance when ignoring confidence, Actinomyces genus only", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 5", x="Recall", y="F value")
streptococcus_all_conf <- collect_all_confidence(streptococcus_results)
ggplot(streptococcus_results, aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,10,2), limits = c(0,10)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14) ) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Streptococcus genus only", y="number of True Matches", x="confidence value")
ggplot(streptococcus_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/9, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#geom_label_repel(aes(x=true_match/9, y=fmeasure, label=region), nudge_x= -.3, direction= "y") +
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom" ) +
labs(title="Performance when ignoring confidence, Streptococcus genus only", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 9", x="Recall", y="F value")
others_all_conf <- collect_all_confidence(others_results)
ggplot(others_results, aes(y=true_match, x=confidence)) +
geom_line(aes(color=region), size=1.3)+
scale_color_brewer(palette = "Paired")+
facet_grid(classifier~database) +
#theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks=seq(0,40,20), limits = c(0,40)) +
scale_x_continuous(breaks=seq(0,1,.2), limits = c(0,1)) +
theme(plot.title = element_text(size=16), plot.subtitle = element_text(size=12), axis.title.y= element_text(size=14), axis.title.x= element_text(size=14), legend.title = element_text(size=14),legend.text = element_text(size=14), axis.text = element_text(size=12), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14)) +
labs(title="Number of True Matches for increasing confidence values", subtitle="For the Streptococcus genus only", y="number of True Matches", x="confidence value")
ggplot(others_all_conf) +
geom_rect(aes(xmin=0, xmax=1, ymin=0, ymax=1), fill=NA, size=1, color='gray60') +
geom_point(aes(x=true_match/40, y=fmeasure,color=database), size=3, shape = 21, fill = "white", stroke = 3) +
geom_point(aes(x=1, y=1), color="red", size=2)+
#scale_color_brewer(palette = "Paired")+
scale_color_manual(values = c(wes_palette("Moonrise2")[3], wes_palette("Moonrise2")[2], wes_palette("Moonrise2")[4])) +
facet_grid(classifier~region)+
scale_y_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
scale_x_continuous(breaks=seq(0,1,.5), limits = c(0,1)) +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=11), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), legend.position = "bottom"  ) +
labs(title="Performance when ignoring confidence, remaining genera", subtitle="All classification schemes using part of 16S gene as identifier\nTotal species = 40", x="Recall", y="F value")
list_of_df <- function(path_to_dir, prefix) {
# got tired of loading all the csv files individually,
# so this function does it in batch. Reads all filenames
# in a dir, then creates a df from the csv, then adds names
# to the growing list of dataframes.
get_filenames <- list.files(path_to_dir, full.names = TRUE)
build_csv_df <- lapply(get_filenames, read.csv, stringsAsFactors=FALSE)
grow_names <- vector()
for (g in get_filenames) {
new_name <- paste(prefix, strsplit(basename(g), "_")[[1]][3], strsplit(basename(g), "_")[[1]][5], sep="_")
grow_names <- c(grow_names, new_name)
}
names(build_csv_df) <- grow_names
return(build_csv_df)
}
blca_gg_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/gg/", "blca")
blca_silva_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/silva/", "blca")
blca_ncbi16_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/ncbi16/", "blca")
measles <- function(results, db, vr, clsfr) {
#print(sprintf("%s confidence values", length(unique(results$confidence))))
# was a little lazy with the column names
# after the python script is done reformatting classification
# results to something that can be imported as a df,
# the classifer column is labled 'blca', whether it's blca or nb.
# these are lists of the species missing from each reference database
# in order to calculate the number of missed matches correctly
gg_missing <- c('Actinotignum schaalii', 'Actinomyces naeslundii', 'Actinomyces neuii subsp. anitratus', 'Actinomyces odontolyticus', 'Actinomyces turicensis', 'Actinomyces urogenitalis DSM 15434', 'Aerococcus christensenii', 'Aerococcus sanguinicola', 'Aerococcus urinae', 'Alloscardovia omnicolens', 'Anaerococcus octavius', 'Bacillus idriensis', 'Bacillus infantis', 'Brevibacterium ravenspurgense', 'Corynebacterium amycolatum', 'Corynebacterium coyleae', 'Corynebacterium matruchotii ATCC 14266', 'Corynebacterium pyruviciproducens ATCC BAA-1742', 'Corynebacterium riegelii', 'Corynebacterium tuscaniense', 'Dermabacter hominis', 'Enterobacter asburiae', 'Enterobacter cloacae subsp. cloacae ATCC 13047', 'Enterococcus faecalis', 'Escherichia coli', 'Facklamia hominis CCUG 36813', 'Facklamia ignava', 'Gardnerella vaginalis ATCC 14018 = JCM 11026', 'Globicatella sanguinis', 'Gordonia terrae', 'Klebsiella pneumoniae', 'Kytococcus schroeteri', 'Lactobacillus crispatus', 'Lactobacillus fermentum', 'Lactobacillus gasseri', 'Lactobacillus jensenii', 'Lactobacillus johnsonii', 'Lactobacillus rhamnosus', 'Moraxella osloensis', 'Neisseria macacae', 'Neisseria perflava', 'Oligella urethralis', 'Propionibacterium avidum ATCC 25577', 'Proteus mirabilis', 'Pseudomonas aeruginosa', 'Staphylococcus hominis subsp. hominis', 'Staphylococcus saprophyticus subsp. saprophyticus ATCC 15305', 'Staphylococcus simulans', 'Staphylococcus warneri', 'Streptococcus equinus', 'Streptococcus gordonii', 'Streptococcus mitis', 'Streptococcus oralis ATCC 35037', 'Streptococcus parasanguinis', 'Streptococcus salivarius subsp. salivarius', 'Streptococcus sanguinis', 'Trueperella bernardiae', 'Varibaculum cambriense')
custom_missing <- c('Bacillus idriensis', 'Corynebacterium species')
ncbi_gen_missing <- c('Actinomyces naeslundii', 'Anaerococcus octavius', 'Bacillus idriensis', 'Corynebacterium amycolatum', 'Dermabacter hominis', 'Enterobacter asburiae', 'Globicatella sanguinis', 'Kytococcus schroeteri', 'Lactobacillus johnsonii', 'Neisseria macacae', 'Neisseria perflava', 'Neisseria subflava', 'Streptococcus oralis ATCC 35037', 'Corynebacterium species')
# updating this
# instead of creating a logical vector, loading the missing species
# list into a variable that gets used when calculating cellC
if (db=="gg") {
# greengenes database
# make a column showing if the query is in the database or not
#results$attendence <- results$query %notin% gg_missing
presence <- ifelse((results$match==1 & (results$query %notin% gg_missing)), 1, 0)
} else if (db=="silva") {
# silva database
presence <- ifelse((results$match==1), 3, 0)
} else if (db=="custom") {
# the custom genomic database
# make a column showing if the query is in the database or not
#results$attendence <- results$query %notin% custom_missing
presence <- ifelse((results$match==1 & (results$query %notin% custom_missing)), 11, 0)
} else {
# the ncbi 16s database
presence <- ifelse((results$match==1), 5, 0)
}
# set up some variables
# replace 'region' names with more informative ones
if (vr=="v3") {
variable_region <- "V3"
} else if (vr=="v6") {
variable_region <- "V6"
} else if (vr=="k17") {
variable_region <- "V1-V3"
} else if (vr=="bbv") {
variable_region <- "V2-V3"
} else if (vr=="cap") {
variable_region <- "V4"
} else if (vr=="k515") {
variable_region <- "V4-V6"
} else if (vr=="b646") {
variable_region <- "V3-V5"
} else if (vr=="ffh") {
variable_region <- "Ffh V1-V2"
} else if (vr=="rpob") {
variable_region <- "RpoB V1"
} else {
variable_region <- "V3-V4"
}
# replace database
if (db=="gg") {
the_db <- "Greengenes"
} else if (db=="silva") {
the_db <- "Silva"
} else if (db=="ncbi16") {
the_db <- "NCBI 16S"
} else if (db=="genomic") {
the_db <- "NCBI Genomic"
} else {
the_db <- "Custom Genomic"
}
# replace classifier
if (clsfr=="blca") {
the_clsfr <- "BLCA"
} else {
the_clsfr <- "Naive Bayes"
}
small_range <- data.frame(species=results$species, database=the_db, classifier=the_clsfr, region=variable_region, match=presence)
return(small_range)
}
total_measles <- function(each_result, genus_filter) {
each_name <- names(each_result)
final_db <- data.frame()
for (x in each_name) {
the_classifier <- strsplit(x, split="_")[[1]][1]
the_var_region <- strsplit(x, split="_")[[1]][2]
the_db <- strsplit(x, split="_")[[1]][3]
# make a new column to hold the genera
add_genus <- each_result[x][[1]] %>% separate(col=query, into=c("query_genus", "query_species"), sep=" ", remove=FALSE, extra="drop")
# for when you want all species
if (genus_filter=="all") {
select_genus <- add_genus
} else if (genus_filter=="some") {
not_these <- c("Actinomyces", "Bifidobacterium", "Corynebacterium", "Staphylococcus", "Streptococcus", "Lactobacillus")
select_genus <- add_genus %>% filter(query_genus %notin% not_these)
} else {
select_genus <- add_genus %>% filter(query_genus==genus_filter)
}
# then merge them together again for the matrix addition
send_forward <- select_genus %>% unite("species", query_genus:query_species, remove = TRUE)
#message(sprintf("sending to measles: name=%s, database=%s, vr=%s, classifier=%s", x, the_db, the_var_region, the_classifier))
holder <- measles(send_forward, the_db, the_var_region, the_classifier)
final_db <- rbind(final_db, holder)
}
return(final_db)
}
# only for BLCA!
mashup_by_genus <- function(the_genus, keep_gg=TRUE) {
# leaving out gg for now
blca_gg_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/gg/", "blca")
blca_silva_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/silva/", "blca")
blca_ncbi16_results <- list_of_df("../../taxonomy/processed_files/blca_validated_outfiles_2020-03-09_18/ncbi16/", "blca")
genus_blca_silva_match <- total_measles(blca_silva_results, the_genus)
genus_blca_gg_match <- total_measles(blca_gg_results, the_genus)
genus_blca_ncbi16_match <- total_measles(blca_ncbi16_results, the_genus)
genus_silva_blca_matrix <- as.matrix(genus_blca_silva_match %>% pivot_wider(names_from = region, values_from = match) %>% select(-database, -classifier) %>% tibble::column_to_rownames("species"))
genus_blca_gg_matrix <- as.matrix(genus_blca_gg_match %>% pivot_wider(names_from = region, values_from = match) %>% select(-database, -classifier) %>% tibble::column_to_rownames("species"))
genus_blca_ncbi16_matrix <- as.matrix(genus_blca_ncbi16_match %>% pivot_wider(names_from = region, values_from = match) %>% select(-database, -classifier) %>% tibble::column_to_rownames("species"))
#genus_blca_ncbi16_matrix
# so now there's columns in the dataframes that indicate the presence/absence of
# a species correctly identified by a database, blca, and identifier. Now do the
# matrix additition and use the results to graph them.
# this clause is to make it easier to unvite greengenes
if (keep_gg) {
#message("gg is true")
mashup_genus <- genus_silva_blca_matrix + genus_blca_ncbi16_matrix +genus_blca_gg_matrix
} else {
#message("gg is false")
mashup_genus <- genus_silva_blca_matrix + genus_blca_ncbi16_matrix
}
mashup_genus <- as.data.frame(mashup_genus) %>% tibble::rownames_to_column("species")
mashup_genus <- mashup_genus %>% arrange(species)
mashup_genus$rows <- seq_along(mashup_genus$species)
#mashup_genus
long_mashup_genus <- pivot_longer(mashup_genus, cols=c(-species, -rows))
if (the_genus=="all") {
long_mashup_genus$species <- gsub("_", " ", fixed=TRUE, long_mashup_genus$species)
} else if (the_genus=="some") {
long_mashup_genus$species <- gsub("_", " ", fixed=TRUE, long_mashup_genus$species)
} else {
long_mashup_genus <- long_mashup_genus %>% separate(col=species, into=c("genus", "species"), sep="_", remove=FALSE, extra="drop")
}
long_mashup_genus$value <- as.character(long_mashup_genus$value)
return(long_mashup_genus)
}
mashup_lacto_gg <- mashup_by_genus("Lactobacillus")
ggplot(mashup_lacto_gg, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[3], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nLactobacillus species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall targeted amplicons", y="Lactobacillus species", x="region")
mashup_lacto <- mashup_by_genus("Lactobacillus", keep_gg = FALSE)
ggplot(mashup_lacto, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "silva", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nLactobacillus species", subtitle="databases: NCBI 16S, Silva\nall targeted amplicons", y="Lactobacillus species", x="region")
mashup_strep <- mashup_by_genus("Streptococcus")
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nStreptococcus species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Streptococcus species", x="region")
mashup_strep <- mashup_by_genus("Streptococcus", keep_gg = FALSE)
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("none", "ncbi 16s", "silva + ncbi")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nStreptococcus species", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="Streptococcus species", x="region")
mashup_strep <- mashup_by_genus("Staphylococcus")
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nStaphylococcus species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Staphylococcus species", x="region")
mashup_strep <- mashup_by_genus("Staphylococcus", keep_gg = FALSE)
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "silva", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nStaphylococcus species", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="Staphylococcus species", x="region")
mashup_strep <- mashup_by_genus("Corynebacterium")
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nCorynebacterium species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Corynebacterium species", x="region")
mashup_strep <- mashup_by_genus("Corynebacterium", keep_gg = FALSE)
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nCorynebacterium species", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="Corynebacterium species", x="region")
mashup_strep <- mashup_by_genus("Bifidobacterium")
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
#scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nBifidobacterium species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Bifidobacterium species", x="region")
mashup_strep <- mashup_by_genus("Bifidobacterium", keep_gg = FALSE)
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nBifidobacterium species", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="Bifidobacterium species", x="region")
mashup_strep <- mashup_by_genus("Actinomyces")
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
#scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("GrandBudapest2")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "silva", "ncbi 16s", "gg + ncbi", "silva + ncbi", "all")) +
scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nActinomyces species", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Actinomyces species", x="region")
mashup_strep <- mashup_by_genus("Actinomyces", keep_gg = FALSE)
ggplot(mashup_strep, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "silva", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nActinomyces species", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="Actinomyces species", x="region")
mashup_all_of_them <- mashup_by_genus("all")
first_third <- ggplot(mashup_all_of_them %>% filter(rows<=26), aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray95", wes_palette("IsleofDogs1")[3],wes_palette("Zissou1")[3], wes_palette("IsleofDogs1")[5],wes_palette("Zissou1")[1], wes_palette("IsleofDogs1")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "gg", "silva", "gg + silva", "ncbi 16s", "gg + ncbi 16s", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1))
#labs(title="Ability of BLCA to correctly identify Thomas-White dataset", subtitle="databases: Greengenes, NCBI 16S, Silva\nall amplicons", y="Actinomyces species", x="region")
second_third <- ggplot(mashup_all_of_them %>% filter(rows > 26 & rows <=52), aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray95", wes_palette("IsleofDogs1")[3],wes_palette("Zissou1")[3], wes_palette("IsleofDogs1")[5],wes_palette("Zissou1")[1], wes_palette("IsleofDogs1")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "gg", "silva", "gg + silva", "ncbi 16s", "gg + ncbi 16s", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_blank(), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1))
last_third <- ggplot(mashup_all_of_them %>% filter(rows>52), aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray95", wes_palette("IsleofDogs1")[3],wes_palette("Zissou1")[3], wes_palette("IsleofDogs1")[5],wes_palette("Zissou1")[1], wes_palette("IsleofDogs1")[1], wes_palette("Zissou1")[5], "black"), labels=c("none", "gg", "silva", "gg + silva", "ncbi 16s", "gg + ncbi 16s", "silva + ncbi", "all")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_blank(), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1))
(first_third + second_third + last_third) + plot_layout(guides = 'collect')
mashup_all <- mashup_by_genus("all", keep_gg = FALSE)
ggplot(mashup_all, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "silva", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nspecies in Thomas-White dataset", subtitle="databases: NCBI 16S, Silva\nall amplicons", y="species", x="region")
mashup_all <- mashup_by_genus("some", keep_gg = FALSE)
ggplot(mashup_all, aes(y=species, x=name, color=value)) +
geom_point(size=6)+
scale_color_manual(values = c("gray90", wes_palette("Zissou1")[4], wes_palette("Zissou1")[1], wes_palette("Zissou1")[5]), labels=c("not identified", "silva", "ncbi 16s", "silva + ncbi 16s")) +
#scale_color_brewer(palette = "Paired")+
theme_classic() +
theme(plot.title = element_text(size=20), plot.subtitle = element_text(size=14), axis.title.y= element_text(size=14), axis.title.x = element_text(size=14), axis.text = element_text(size=12), legend.title = element_text(size=14),legend.text = element_text(size=14), strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14), axis.text.x = element_text(angle = 30, hjust=1)) +
labs(title="Ability of BLCA to correctly identify\nspecies in Thomas-White dataset", subtitle="remaining genera containing less then four species\ndatabases: NCBI 16S, Silva\nall amplicons", y="species", x="region")
mashup_all_gg$genus <- sub(" .*", "", mashup_all_gg$species)
mashup_all_gg$genus <- sub(" .*", "", mashup_all$species)
mashup_all$genus <- sub(" .*", "", mashup_all$species)
mash_ncbi <- mashup_all %>% filter(value %in% c(5,6,8,9))
mash_silva <- mashup_all %>% filter(value %in% c(3,4,8,9))
mash_gg <- mashup_all %>% filter(value %in% c(1,4,6,9))
mash_ncbi <- mash_ncbi %>%
group_by(genus,name) %>%
summarise(ncbi_count=n())
mash_silva <- mash_silva %>%
group_by(genus,name) %>%
summarise(silva_count=n())
mash_gg <- mash_gg %>%
group_by(genus,name) %>%
summarise(gg_count=n())
# join for giant table
mash_all_counts <- full_join(mash_ncbi, mash_silva, by = c('genus', 'name'))
mash_all_counts <- full_join(mash_all_counts, mash_gg, by = c('genus', 'name'))
### Can't figure out how to display / print the table appropriately
### Use individual tables instead
mash_ncbi <- spread(mash_ncbi, name, ncbi_count)
mash_silva <- spread(mash_silva, name, silva_count)
mash_gg <- spread(mash_gg, name, gg_count)
